{% extends "../../../partials/form-layout.njk" %}

{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/fieldset/macro.njk" import govukFieldset %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "../../../components/accessible-autocomplete/macro.njk" import accessibleAutocomplete %}

{% set section = content.pages.interestedParties.section %}
{% set heading = content.pages.interestedParties.title %}
{% set legend = content.pages.interestedParties.legend %}
{% set helpText = content.pages.interestedParties.helpText %}

{% set crownCourtHtml %}

  {{ accessibleAutocomplete({
    id: 'crownCourt',
    name: 'crownCourt',
    label: content.pages.interestedParties.questions.crownCourt.text,
    options: crownCourts,
    value: notifyingOrganisationName.value,
    errorMessage: notifyingOrganisationName.error,
    nonce: cspNonce
  }) }}

{% endset %}

{% set magistrateCourtHtml %}

  {{ accessibleAutocomplete({
    id: 'magistratesCourt',
    name: 'magistratesCourt',
    label: content.pages.interestedParties.questions.magistratesCourt.text,
    options: magistratesCourts,
    value: notifyingOrganisationName.value,
    errorMessage: notifyingOrganisationName.error,
    nonce: cspNonce
  }) }}

{% endset %}

{% set prisonHtml %}

  {{ accessibleAutocomplete({
    id: 'prison',
    name: 'prison',
    label: content.pages.interestedParties.questions.prison.text,
    options: prisons,
    value: notifyingOrganisationName.value,
    errorMessage: notifyingOrganisationName.error,
    nonce: cspNonce
  }) }}

{% endset %}

{% set probationRegionHtml %}

  {{ govukSelect({
    id: "probationRegion",
    name: "probationRegion",
    label: {
      text: content.pages.interestedParties.questions.probationRegion.text
    },
    items: probationRegions,
    value: responsibleOrganisationRegion.value,
    errorMessage: responsibleOrganisationRegion.error,
    disabled: not isOrderEditable
  }) }}

{% endset %}

{% set yjsRegionHtml %}

  {{ govukSelect({
    id: "yjsRegion",
    name: "yjsRegion",
    label: {
      text: content.pages.interestedParties.questions.yjsRegion.text
    },
    items: yjsRegions,
    value: responsibleOrganisationRegion.value,
    errorMessage: responsibleOrganisationRegion.error,
    disabled: not isOrderEditable
  }) }}

{% endset %}

{% set notifyingOrgOptions = [] %}
{% for org in notifyingOrganisations | toOptions(not isOrderEditable) %}
  {% if org.value == 'PRISON' %}
    {% set notifyingOrgOptions = (notifyingOrgOptions.push({
      value: org.value,
      text: org.text,
      conditional: {
        html: prisonHtml
      },
      disabled: org.disabled
    }), notifyingOrgOptions) %}
  {% elif org.value == 'CROWN_COURT' %}
    {% set notifyingOrgOptions = (notifyingOrgOptions.push({
      value: org.value,
      text: org.text,
      conditional: {
        html: crownCourtHtml
      },
      disabled: org.disabled
    }), notifyingOrgOptions) %}
  {% elif org.value == 'MAGISTRATES_COURT' %}
    {% set notifyingOrgOptions = (notifyingOrgOptions.push({
      value: org.value,
      text: org.text,
      conditional: {
        html: magistrateCourtHtml
      },
      disabled: org.disabled
    }), notifyingOrgOptions) %}
  {% else %}
    {% set notifyingOrgOptions = (notifyingOrgOptions.push(org), notifyingOrgOptions) %}
  {% endif %}
{% endfor %}

{% set responsibleOrgOptions = [] %}
{% for org in responsibleOrganisations | toOptions(not isOrderEditable) %}
  {% if org.value == 'PROBATION' %}
    {% set responsibleOrgOptions = (responsibleOrgOptions.push({
      value: org.value,
      text: org.text,
      conditional: {
        html: probationRegionHtml
      },
      disabled: org.disabled
    }), responsibleOrgOptions) %}
  {% elif org.value == 'YJS' %}
    {% set responsibleOrgOptions = (responsibleOrgOptions.push({
      value: org.value,
      text: org.text,
      conditional: {
        html: yjsRegionHtml
      },
      disabled: org.disabled
    }), responsibleOrgOptions) %}
  {% else %}
    {% set responsibleOrgOptions = (responsibleOrgOptions.push(org), responsibleOrgOptions) %}
  {% endif %}
{% endfor %}

{% block formInputs %}

  {% call govukFieldset({
    legend: {
      text: "Notifying organisation",
      classes: "govuk-fieldset__legend--m",
      isPageHeading: false
    }
  }) %}

    {{ govukRadios({
      name: "notifyingOrganisation",
      fieldset: {
        legend: {
          text: content.pages.interestedParties.questions.notifyingOrganisation.text,
          isPageHeading: true,
          classes: "govuk-fieldset__legend--s"
        }
      },
      items: notifyingOrgOptions,
      value: notifyingOrganisation.value,
      errorMessage: notifyingOrganisation.error,
      disabled: not isOrderEditable
    }) }}

    {{ govukInput({
      label: {
        text: content.pages.interestedParties.questions.notifyingOrganisationEmail.text,
        classes: "govuk-label--s"
      },
      hint: {
        html: content.pages.interestedParties.questions.notifyingOrganisationEmail.hint
      },
      classes: "govuk-!-width-one-half",
      id: "notifyingOrganisationEmail",
      name: "notifyingOrganisationEmail",
      value: notifyingOrganisationEmail.value,
      errorMessage: notifyingOrganisationEmail.error,
      disabled: not isOrderEditable
    }) }}
  {% endcall %}

  {% call govukFieldset({
    legend: {
      text: "Responsible Officer",
      classes: "govuk-fieldset__legend--m",
      isPageHeading: false
    }
  }) %}
    <p>
      The Responsible Officer checks the device wearer follows the electronic monitoring order. For example, a Responsible Officer is the device wearer's probation officer.
    </p>
    {{ govukInput({
      label: {
        text: content.pages.interestedParties.questions.responsibleOfficerName.text,
        classes: "govuk-label--s"
      },
      classes: "govuk-!-width-one-half",
      id: "responsibleOfficerName",
      name: "responsibleOfficerName",
      value: responsibleOfficerName.value,
      errorMessage: responsibleOfficerName.error,
      disabled: not isOrderEditable
    }) }}

    {{ govukInput({
      label: {
        text: content.pages.interestedParties.questions.responsibleOfficerPhoneNumber.text,
        classes: "govuk-label--s"
      },
      classes: "govuk-!-width-one-half",
      id: "responsibleOfficerPhoneNumber",
      name: "responsibleOfficerPhoneNumber",
      type: "tel",
      value: responsibleOfficerPhoneNumber.value,
      errorMessage: responsibleOfficerPhoneNumber.error,
      disabled: not isOrderEditable
    }) }}
  {% endcall %}

  {% call govukFieldset({
    legend: {
      text: "Responsible Organisation",
      classes: "govuk-fieldset__legend--m",
      isPageHeading: false
    }
  }) %}
    <p>
      The Responsible Organisation is the service the Responsible Officer is part of. For example, the Responsible Organisation for a probation officer is the Probation Service.
    </p>
    {{ govukRadios({
      name: "responsibleOrganisation",
      fieldset: {
        legend: {
          text: content.pages.interestedParties.questions.responsibleOrganisation.text,
          isPageHeading: false,
          classes: "govuk-fieldset__legend--s"
        }
      },
      value: responsibleOrganisation.value,
      errorMessage: responsibleOrganisation.error,
      items: responsibleOrgOptions
    }) }}

    {% call govukFieldset({
      legend: {
        text: content.pages.interestedParties.questions.responsibleOrganisationAddress.text,
        classes: "govuk-fieldset__legend--s",
        isPageHeading: false
      }
    }) %}
      {{ govukInput({
        label: {
          text: "Address line 1"
        },
        classes: "govuk-!-width-two-thirds",
        id: "responsibleOrganisationAddressLine1",
        name: "responsibleOrganisationAddressLine1",
        value: responsibleOrganisationAddressLine1.value,
        errorMessage: responsibleOrganisationAddressLine1.error,
        disabled: not isOrderEditable
      }) }}

      {{ govukInput({
        label: {
          text: "Address line 2 (optional)"
        },
        classes: "govuk-!-width-two-thirds",
        id: "responsibleOrganisationAddressLine2",
        name: "responsibleOrganisationAddressLine2",
        value: responsibleOrganisationAddressLine2.value,
        errorMessage: responsibleOrganisationAddressLine2.error,
        disabled: not isOrderEditable
      }) }}

      {{ govukInput({
        label: {
          text: "Town or city"
        },
        classes: "govuk-!-width-two-thirds",
        id: "responsibleOrganisationAddressLine3",
        name: "responsibleOrganisationAddressLine3",
        value: responsibleOrganisationAddressLine3.value,
        errorMessage: responsibleOrganisationAddressLine3.error,
        disabled: not isOrderEditable
      }) }}

      {{ govukInput({
        label: {
          text: "County (optional)"
        },
        classes: "govuk-!-width-two-thirds",
        id: "responsibleOrganisationAddressLine4",
        name: "responsibleOrganisationAddressLine4",
        value: responsibleOrganisationAddressLine4.value,
        errorMessage: responsibleOrganisationAddressLine4.error,
        disabled: not isOrderEditable
      }) }}

      {{ govukInput({
        label: {
          text: "Postcode"
        },
        classes: "govuk-!-width-two-thirds",
        id: "responsibleOrganisationAddressPostcode",
        name: "responsibleOrganisationAddressPostcode",
        value: responsibleOrganisationAddressPostcode.value,
        errorMessage: responsibleOrganisationAddressPostcode.error,
        disabled: not isOrderEditable
      }) }}

    {% endcall %}

    {{ govukInput({
      label: {
        text: content.pages.interestedParties.questions.responsibleOrganisationPhoneNumber.text,
        classes: "govuk-label--s"
      },
      classes: "govuk-!-width-one-half",
      id: "responsibleOrganisationPhoneNumber",
      name: "responsibleOrganisationPhoneNumber",
      type: "tel",
      value: responsibleOrganisationPhoneNumber.value,
      errorMessage: responsibleOrganisationPhoneNumber.error,
      disabled: not isOrderEditable
    }) }}

    {{ govukInput({
      label: {
        text: content.pages.interestedParties.questions.responsibleOrganisationEmail.text,
        classes: "govuk-label--s"
      },
      classes: "govuk-!-width-one-half",
      id: "responsibleOrganisationEmail",
      name: "responsibleOrganisationEmail",
      value: responsibleOrganisationEmail.value,
      errorMessage: responsibleOrganisationEmail.error,
      disabled: not isOrderEditable
    }) }}
  {% endcall %}


{% endblock %}
